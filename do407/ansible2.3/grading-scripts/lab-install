#!/bin/bash
#
# Copyright 2016 Red Hat, Inc.
#
# NAME
#     lab-install - grading script for DO407 installation practice
#
# SYNOPSIS
#     lab-install {setup|grade|cleanup|solve|reset}
#
#        grade   - perform evaluation steps on the system
#        cleanup - perform post-lab cleanup (not comprehensive like reset)
#        solve   - do the lab exercise for the student (may call setup)
#        reset   - avoid resetting a machine (not preferred)
#        (ONLY INCLUDE PROVIDED COMMANDS, REMOVE REST)
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup, reset, or solve for the particular lab of awesomeness.
#
# CHANGELOG
#   * Mon May 16 2016 Chen Chang <cchang@redhat.com>
#   - Changes to align with new directory structure
#   * Mon May  2 2016 George Hacker <ghacker@redhat.com>
#   - Changed print_SUCCESS to print_PASS in lab_grade function
#   - Fixed quoting error
#   * Sun Apr  3 12:51:14 EDT 2016 Chen Chang <cchang@redhat.com>
#   - New script

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
targetw='workstation'
targeta='servera'
targetb='serverb'
lab_dir='/home/student/dep-install'
inv_file="${lab_dir}/inventory"

# This defines which subcommands are supported (solve, reset, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup solve grade cleanup reset)

function lab_setup {

  target=${targetw}

  echo
  echo "Setting up ${target} for lab exercise work:"
  echo

  # Check for lab prerequisites (perhaps a required package?).

  if !  host_reachable ${targeta}
  then
    pad " · Error - ${targeta} unreachable."
    print_FAIL
  else
    print_SUCCESS
    echo
  fi
}

function lab_solve {

  target=${targetw}

  lab_reset
  lab_setup

  echo
  echo "Solving the lab on ${target}:"
  echo

  pad ' · Installing Ansible'

  cmd1='yum install -y ansible'

  if ${ssh} ${target} ${cmd1} &> /dev/null
  then
    print_SUCCESS
  else
    print_FAIL
  fi


  pad ' · Creating lab directory'

  cmd1="mkdir -p ${lab_dir}"

  if ${ssh} ${target} -l student "${cmd1}" &> /dev/null
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  echo


  pad ' · Creating inventory file'

  cmd1="echo '[dev]' > ${inv_file}"
  cmd2="echo 'servera.lab.example.com' >> ${inv_file}"

  if ${ssh} ${target} -l student "${cmd1} && ${cmd2}" &> /dev/null
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  echo

}

function lab_grade {

  target=${targetw}

  echo
  echo "Grading the student's work on ${target}:"
  echo
  host_reachable ${targeta}

  # Put in the steps to grade the lab (use print_PASS or print_FAIL)

  pad " · Verify connection to ${targeta}"

  cmd1='hostname'
  
  if ${ssh} ${targeta} "${cmd1}" &> /dev/null
  then
    print_PASS
  else
    print_FAIL
  fi


  pad ' · Verify ansible installation'

  cmd1='rpm -q ansible'
  
  if ${ssh} ${target} "${cmd1}" &> /dev/null
  then
    print_PASS
  else
    print_FAIL
  fi


  pad ' · Verify inventory file'
  cmd1="[[ -f $inv_file ]]"

  if ${ssh} ${target} "${cmd1}" &> /dev/null
  then
    print_PASS
    pad ' · File contents include required string'
    string='servera.lab.example.com'
    cmd1="ansible dev -i $inv_file --list | grep $string"
    if ${ssh} ${target} "${cmd1}" &> /dev/null
    then
      print_PASS
    else
      print_FAIL
    fi
  else
    print_FAIL
  fi

  # Overall grade
  echo
  pad 'Overall lab grade'
  if [[ ${fail_count} -eq 0 ]]
  then
    print_PASS
  else
    print_FAIL
  fi

  echo
}

function lab_cleanup {

  target=${targetw}

  echo
  echo "Cleaning up the lab on ${targetw}:"
  echo

  pad ' · Removing Ansible'
  cmd1="yum remove -y ansible"
  ${ssh} ${target} "${cmd1}" &> /dev/null
  print_SUCCESS

  echo
}


function lab_reset {

  target=${targetw}

  echo
  echo "Resetting the lab on ${targetw}:"
  echo

  pad ' · Removing Ansible'
  cmd1="yum remove -y ansible"
  ${ssh} ${target} "${cmd1}" &> /dev/null
  print_SUCCESS

  pad ' · Removing inventory file'
  cmd1="rm -f ${inv_file}"
  ${ssh} ${target} "${cmd1}" &> /dev/null
  print_SUCCESS

  pad ' · Removing lab directory'
  cmd1="rm -f ${lab_dir}"
  ${ssh} ${target} "${cmd1}" &> /dev/null
  print_SUCCESS

  echo
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
