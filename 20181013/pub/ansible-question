1) Dynamic inventory
   
The inventory was to be set to /opt/ansible/dynamic/inventory and timeout to 60. Once you correctly configured it show group of hosts majori, bunnies, newbunnies. 

vim /etc/ansible/ansible.conf
inventory = /opt/ansible/dynamic/inventory
timeout = 60

2) Create /home/ansible/playbook/httpd.yml 
	a) which should install http service
	b) Copy configuration file using get_url from link http://classroom.example.com/pub/httpd.conf
           to /etc/httpd/conf/httpd.conf
	c) Change /var/www/html/index.html file using lineinfile module so that it's pub
           should be "Hello from nodeX". If the file exists it should not overwrite. 
	d) Start the service of httpd and enable it.

	It may not show the ouput, may show permission denied.

3) Creat a /home/ansible/playbook/httpd-auth.yml file such that in all the nodes
	a) It creates /var/www/html/private directory
	b) copy a file from http://classroom.example.com/pub/htaccess-custom to /var/www/html/private/.htaccess file
	c) copy a file from  http://classroom.example.com/pub/htpasswd to  /var/www/html/private/.htpasswd
	d) Implement appropriate permission so that apache can read them
	e) Replace all instances of 'AllowOverride none' with 'Allowoverride AuthConfig' 
           in /etc/httpd/conf/httpd.conf using replace module
	e) Create /var/www/html/private/index.html to read as This node nodeX is protected

	You can test you configuration using username ansible and password ansiansi
	It may not show the ouput, may show permission denied on one or two systems.

4) 4)Create a script file /home/ansible/playbook/adhoc.sh 
	a) This should copy the file /usr/local/bin/runme.sh to /usr/bin/runme.sh on all nodes make sure owner & group owership should be ansible.
        b) set permission  755.
	c) This should run as user ansible. 
	d) The file should have execute permissions
        e) runme.sh script should  excute on all managed hosts.                            

5) Create custom groups named production and backup such that node1 and node2 belongs 
   to production and node3 and node4 belongs to backup.
	 Create a tag.yml which should be able to do the following:-
	a) Create a tarball /var/tmp/production.tar.gz for the production group 
           containing the /var/www/html directory.
	b) Create a tarball /var/tmp/backup.tar.gz for the backup group containing 
           the /var/log/httpd directory.

6) Create /home/ansible/playbook/inaccess.yml 
	a) If the url http://classroom.example.com/pub/access.html is accessible it should copy the file to /var/www/html
	   You must use block groups rescue group
	c) Otherwise it should create a file noaccess.html under /var/www/html with the pub as â€œI have no access."
		
7) Create a file hostinfo.yml which should store the following system information in 
   /root/hostinfo.txt in a single line 
   
   nodeX processorcount defaultNICIPV4address defaultNICmacaddress 

8) Create ping.yml so that 
	a) It creates /var/www/html/tag1.html in node 1 & 3 with pub "I am tag1" when run as tag tag1
	   ansible-playbook --tags tag1 ping.yml
	b) It creates /var/www/html/tag2.html in node 2 & 4 with pub "I am tag2" when run as tag tag2
	   ansible-playbook --tags tag2 ping.yml

9) a) Create noshutdown.yml that start httpd service based on all nodes. 
   b) shutdown.yml should stop httpd service on both node1 and node 4.
   c) It shoud not process node2 and node 3
	  
10) Create a file saveabort.yml that 
    a) Should create a file /etc/saveabort.txt with pub "I am there". 
    b) If this file exists, then it should not allow either overwriting the 
       pubs of the file or modifying the file.
Answer:

[the script should not modify if files already exists]


11)
     a) Set the role path to /home/ansible/roles and timeout to be 60
     b)	Create a requirement file role2install.yml for Installing  role named examfun from url http://classroom.example.com/pub/examfun.tar.gz

12) Create a file createuser.yml
	a) create users in staff variable in examfun role and makes them members of groups 	staff and webclients
	b) create users in guests variable in examfun role and makes them members of guests  and webclients groups
	c) delete users in revoke variable in examfun role
13) Create unarchive.yml
	a) It will unzip http://classroom.example.com/pub/vault.zip using a  password protected file (password=drone) stored in encrypt.yml by executing command
	   uzip -o -P  to /var/www/html
	b)Create encrypt.yml, which is encrypted with password ansiansi
	   stored in .vaultpwd
14)create a playbook "failweb.yml" to  Install ex407-server, start service ex407-server on node1
you must show the output of installation and output of service command
if installation fails then you should provide message " Install Failed"
If Service fails then it should show that "service start failed"
if both fails it should print a message "playbook failed"

